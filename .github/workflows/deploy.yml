name: CLONE_OP_GG

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Cache node modules
        id: node-cache
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: "**/node_modules"
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-modules-

      - name: Install NPM Modules
        if: steps.node-cache.outputs.cache-hit != 'true'
        run: npm install

      #   # testcode 실행
      # - name: Run test codes
      #   run: npm run test

      - name: Generate Environment Variables File for Production
        run: |
          echo "REACT_APP_API_KEY=$REACT_APP_API_KEY" >> .env.production
          echo "REACT_APP_CHAMPION_ICON_URL=$REACT_APP_CHAMPION_ICON_URL" >> .env.production
          echo "REACT_APP_ITEM_URL=$REACT_APP_ITEM_URL" >> .env.production
          echo "REACT_APP_PROFILE_ICON_URL=$REACT_APP_PROFILE_ICON_URL" >> .env.production
          echo "SKIP_PREFLIGHT_CHECK=$SKIP_PREFLIGHT_CHECK" >> .env.production
        env:
          REACT_APP_API_KEY: ${{secrets.REACT_APP_API_KEY}}
          REACT_APP_CHAMPION_ICON_URL: ${{secrets.REACT_APP_CHAMPION_ICON_URL}}
          REACT_APP_ITEM_URL: ${{secrets.REACT_APP_ITEM_URL}}
          REACT_APP_PROFILE_ICON_URL: ${{secrets.REACT_APP_PROFILE_ICON_URL}}
          SKIP_PREFLIGHT_CHECK: ${{secrets.SKIP_PREFLIGHT_CHECK}}
      - name: Build
        run: npm run build
        env:
          CI: ""

      - name: Run ESLint
        run: npx eslint src --ext .js,.jsx,.ts,.tsx

      - name: Deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          aws s3 cp \
          --recursive \
          --region ap-northeast-2 \
          build s3://clone.op.gg
